
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'war'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    api "javax.servlet:javax.servlet-api:3.1.0"

    // active MQ
    implementation 'org.apache.activemq:activemq-all:5.18.2'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'   
    
    // required for active MQ 
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
}

tasks.jar() {
  from("src/main/webapp");
  archiveFileName.set("activemq.jar");
}

tasks.war() {
  archiveFileName.set("activemq.war");
}

tasks.withType(JavaCompile) {
  options.compilerArgs << '-Xlint:unchecked' 
  options.compilerArgs << '--enable-preview' 
}

tasks.withType(Test) {
  jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
  jvmArgs += '--enable-preview'
}

tasks.javadoc() {    
  source = sourceSets.main.allJava
  options.memberLevel = JavadocMemberLevel.PRIVATE
}

